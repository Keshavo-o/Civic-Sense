<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Citizen Portal | Report to Department</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#111111',
            accent: '#f97316',
            offwhite: '#f5f5f5'
          },
          fontFamily: {
            sans: ['Inter', 'sans-serif'],
          },
        }
      }
    }
  </script>
</head>
<body class="bg-offwhite font-sans text-primary">

  <!-- Navbar -->
  <nav class="bg-primary text-white px-6 py-4 flex justify-between items-center shadow">
    <h1 class="text-xl font-bold">Citizen Portal</h1>
    <a href="/user" class="bg-accent px-4 py-2 rounded-lg shadow hover:bg-orange-500 transition">
      ‚¨Ö Back to Home
    </a>
  </nav>

  <main class="max-w-4xl mx-auto px-4 sm:px-6 py-12">

    <!-- Report Form -->
    <section class="bg-white rounded-2xl shadow-lg p-8 text-center relative overflow-hidden">
      <h2 class="text-2xl font-bold mb-1">üèõ</h2>
      <h2 class="text-2xl font-bold mb-6">Report to Department</h2>


      <form id="deptReportForm" action="/user/submit_report" method="POST" enctype="multipart/form-data" class="space-y-6">

        <!-- Report Title -->
        <input 
          type="text" 
          name="title" 
          required
          maxlength="100"
          class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none"
          placeholder="Enter a short title for the report (e.g., Road Damage, Garbage Issue)">
        
        <!-- Report Text -->
        <textarea 
          name="report" 
          rows="5" 
          required
          maxlength="2000"
          class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none resize-none"
          placeholder="Describe the issue you want to report..."></textarea>

        <!-- Department Selection -->
        <div>
          <label class="block text-left font-semibold mb-2">üè¢ Choose the Department Relevant to Your Complaint
</label>
          <select name="department" required class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none">
            <option value="">-- Select Department --</option>
            <option value="sanitation">Solid Waste Management Department</option>
            <option value="roads">Public Works Department (PWD)</option>
            <option value="water">Water Supply & Sewerage Department / Jal Board</option>
            <option value="electricity">State Electricity Board / DISCOM</option>
            <option value="law">Police Department (Law & Order)</option>
            <option value="health">Municipal Health Department</option>
            <option value="education">Municipal Education Department</option>
            <option value="parks">Horticulture / Parks & Gardens Department</option>
            <option value="urban">Urban Development / Town Planning Department</option>
            <option value="other">Other Civic Issues</option>

          </select>
        </div>

        <!-- Category -->
        <div>
          <label class="block text-left font-semibold mb-2">üìå Category</label>
          <select name="category" required class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none">
            <option value="">-- Select Category --</option>
            <option value="maintenance">Maintenance</option>
            <option value="safety">Safety Issue</option>
            <option value="public">Public Grievance</option>
            <option value="emergency">Emergency</option>
            <option value="suggestion">Suggestion</option>
          </select>
        </div>

        <!-- Priority -->
        <div>
          <label class="block text-left font-semibold mb-2">‚ö° Priority</label>
          <select name="priority" required class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none">
            <option value="normal">Normal</option>
            <option value="urgent">Urgent</option>
            <option value="critical">Critical</option>
          </select>
        </div>

        <!-- Location Autofetch -->
<div>
  <label class="block text-left font-semibold mb-2">üìç Location</label>
  <input 
    type="text" 
    id="location" 
    name="location" 
    required
    class="w-full border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none mb-2"
    placeholder="Fetching location...">
  <button type="button" onclick="getLocation()" class="px-4 py-2 bg-accent text-white rounded-lg shadow hover:bg-orange-500 transition">
    üì° Autofetch Location
  </button>
</div>

<!-- Coordinates -->
<div class="mt-4">
  <label class="block text-left font-semibold mb-2">üåê Coordinates (Approx. Latitude & Longitude)</label>
  <div class="flex space-x-2">
    <input 
      type="text" 
      id="latitude" 
      name="latitude" 
      class="w-1/2 border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none"
      placeholder="latitude">
    <input 
      type="text" 
      id="longitude" 
      name="longitude" 
      class="w-1/2 border rounded-xl px-4 py-3 focus:ring-2 focus:ring-accent outline-none"
      placeholder="Longitude">
  </div>
  <button type="button" onclick="getCoordinates()" class="mt-2 px-4 py-2 bg-accent text-white rounded-lg shadow hover:bg-orange-500 transition">
    üìç Autofetch Coordinates
  </button>
</div>


        <!-- Image Upload -->
        <div>
          <label class="block text-left font-semibold mb-2">üì∑ Attach Image (optional)</label>
          <div class="border-2 border-dashed border-gray-300 rounded-xl p-6 cursor-pointer bg-offwhite hover:border-accent transition">
            <input type="file" name="image" id="imageInput" accept="image/*" class="hidden">
            <label for="imageInput" class="flex flex-col items-center justify-center cursor-pointer">
              <span class="text-gray-500 mb-2">Click to upload or drag and drop</span>
              <span class="px-4 py-2 bg-accent text-white rounded-lg shadow hover:bg-orange-500 transition">Choose Image</span>
            </label>
          </div>
          <!-- Image Preview -->
          <div id="imagePreview" class="mt-4 hidden">
            <p class="text-sm text-gray-500 mb-2">Preview:</p>
            <img id="previewImg" src="" alt="Preview" class="max-h-48 mx-auto rounded-lg shadow">
          </div>
        </div>

        <!-- Submit Button -->
        <button 
          type="submit" 
          class="relative group w-full sm:w-auto px-8 py-3 bg-accent text-white rounded-lg shadow-lg overflow-hidden transition-all duration-300 hover:bg-orange-500">
          <span class="relative z-10 font-semibold">üöÄ Submit Report</span>
          <div class="absolute inset-0 bg-gradient-to-r from-orange-400 to-red-500 opacity-0 group-hover:opacity-100 transition duration-300"></div>
        </button>
      </form>
    </section>

    <!-- Success Popup -->
    <div id="successPopup" class="fixed inset-0 bg-black/60 flex items-center justify-center hidden z-50">
      <div class="bg-white rounded-2xl shadow-2xl p-8 text-center animate-bounceIn">
        <div class="w-16 h-16 mx-auto mb-4 rounded-full bg-green-500 flex items-center justify-center text-white text-3xl animate-pingOnce">
          ‚úÖ
        </div>
        <h3 class="text-xl font-bold mb-2">Report Submitted!</h3>
        <p class="text-gray-600 mb-4">Your report has been successfully sent to the department.</p>
        <a href="/user" class="bg-primary text-white px-6 py-2 rounded-lg shadow hover:bg-gray-900 transition">
          Back to Home
        </a>
      </div>
    </div>

  </main>

  <style>
    @keyframes bounceIn {
      0% { transform: scale(0.5); opacity: 0; }
      70% { transform: scale(1.1); opacity: 1; }
      100% { transform: scale(1); }
    }
    .animate-bounceIn { animation: bounceIn 0.6s ease forwards; }

    @keyframes pingOnce {
      0% { transform: scale(0.8); opacity: 0.6; }
      50% { transform: scale(1.2); opacity: 1; }
      100% { transform: scale(1); opacity: 1; }
    }
    .animate-pingOnce { animation: pingOnce 0.6s ease forwards; }
  </style>

  <script>
    const form = document.getElementById("deptReportForm");
    const popup = document.getElementById("successPopup");
    const imageInput = document.getElementById("imageInput");
    const imagePreview = document.getElementById("imagePreview");
    const previewImg = document.getElementById("previewImg");
    const locationInput = document.getElementById("location");

    // Autofetch location

  // Fetch Address (Location)
  function getLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition, showError);
    } else {
      alert("Geolocation is not supported by this browser.");
    }
  }

  function showPosition(position) {
    let lat = position.coords.latitude;
    let lon = position.coords.longitude;

    // Fill coordinates if present
    document.getElementById("latitude").value = lat;
    document.getElementById("longitude").value = lon;

    // Reverse Geocoding (Optional - fetch human-readable address using OpenStreetMap Nominatim API)
    fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`)
      .then(response => response.json())
      .then(data => {
        if (data && data.display_name) {
          document.getElementById("location").value = data.display_name;
        } else {
          document.getElementById("location").value = `${lat}, ${lon}`;
        }
      })
      .catch(() => {
        document.getElementById("location").value = `${lat}, ${lon}`;
      });
  }

  function showError(error) {
    switch(error.code) {
      case error.PERMISSION_DENIED:
        alert("User denied the request for Geolocation.");
        break;
      case error.POSITION_UNAVAILABLE:
        alert("Location information is unavailable.");
        break;
      case error.TIMEOUT:
        alert("The request to get user location timed out.");
        break;
      case error.UNKNOWN_ERROR:
        alert("An unknown error occurred.");
        break;
    }
  }

  // Fetch only Coordinates
  function getCoordinates() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        document.getElementById("latitude").value = position.coords.latitude;
        document.getElementById("longitude").value = position.coords.longitude;
      }, showError);
    } else {
      alert("Geolocation is not supported by this browser.");
    }
  }



    // Handle image preview
    imageInput.addEventListener("change", function() {
      const file = this.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          previewImg.src = e.target.result;
          imagePreview.classList.remove("hidden");
        };
        reader.readAsDataURL(file);
      }
    });

    // Fake popup (remove if real backend is connected)
    // form.addEventListener("submit", function(e) {
    //   e.preventDefault(); 
    //   popup.classList.remove("hidden"); 
    // });
  </script>

</body>
</html>
